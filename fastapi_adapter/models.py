# generated by fastapi-codegen. DO NOT EDIT.
#   filename:  docs/openapi.yaml
#   timestamp: 2022-01-10T20:57:37+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field


class Status(Enum):
    success = "success"
    failed = "failed"


class APIResponse(BaseModel):
    status: Status
    reason: Optional[str] = None
    errors: Optional[Dict[str, Any]] = None
    id: Optional[str] = None


class Type(Enum):
    text = "text"


class TextPayload(BaseModel):
    type: Optional[Type] = None
    body: str


class Type1(Enum):
    image = "image"
    video = "video"
    audio = "audio"
    document = "document"


class MediaPayload(BaseModel):
    type: Type1
    url: str
    text: Optional[str] = None


class Type2(Enum):
    text = "text"
    media = "media"


class Type3(Enum):
    parameter = "parameter"


class ParameterPayload(BaseModel):
    type: Optional[Type3] = None
    payload: Optional[Any] = None
    _: Optional[str] = None


class UploadMediaPostRequest(BaseModel):
    pass


class MessageRequest(BaseModel):
    to: str
    type: Type2
    provider: str
    payload: List[Union[TextPayload, MediaPayload, ParameterPayload]] = Field(
        ..., min_items=1
    )
